'use strict'

class Swing
{
    swinger = new Stickmin;
    x = 0;
    y = 0;
    theta = 0;
    swingTheta = 0;
    swingDelta = 1;
    strokeColor = 'black';
    scaleValue = 1;

    constructor()
    {
    }

    strokeColor(newColor)
    {
        this.strokeColor = newColor;
    }


    CustomizeSwinger(rightFaceColor = 'yellow', rightEyeColor = 'cyan')
    {
        this.swinger.FaceColor = rightFaceColor;
        this.swinger.EyeColor = rightEyeColor;
    }

    Display(ctx)
    {          
        ctx.save();
        ctx.translate(this.x,this.y);
        ctx.rotate(this.theta*CF);
        ctx.scale(this.scaleValue, this.scaleValue);

        ctx.strokeStyle = this.strokeColor;
        ctx.lineWidth = 2;
        
        ctx.beginPath();
        ctx.moveTo(0, 0);
        ctx.lineTo(70, 250);
        ctx.moveTo(0, 0);
        ctx.lineTo(-70, 250);
        ctx.stroke();
        
        ctx.rotate(this.swingTheta*CF);
        
        ctx.beginPath();
        ctx.moveTo(0, 0);
        ctx.lineTo(0, 205);
        ctx.lineTo(20, 205);
        ctx.lineTo(-20, 205);
        ctx.stroke();
        
        ctx.translate(this.x,this.y + 205);
        this.swinger.Display(ctx);
        
        ctx.restore();
    }

    Next()
    {
        if(this.swingTheta >= 50)
        {
            this.swingDelta = -1;
        }
        else if (this.swingTheta <= -50)
        {
            this.swingDelta = 1;    
        }
        
        this.swingTheta += this.swingDelta;
        
        if(this.swingDelta == 1)
        {
            this.swinger.Right(.5);
        }
        else
        {
            this.swinger.Left(.5);
        }   
    } 

    //Testing Methods
    SwingRight()
    {
        this.swingTheta--;
        this.swinger.Right(.5);
    }

    SwingLeft()
    {
        this.swingTheta++;
        this.swinger.Left(.5);
    }
}
    